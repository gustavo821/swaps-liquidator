/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { StakedGlp, StakedGlpInterface } from "../StakedGlp";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_glp",
        type: "address",
      },
      {
        internalType: "contract IGlpManager",
        name: "_glpManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_stakedGlpTracker",
        type: "address",
      },
      {
        internalType: "address",
        name: "_feeGlpTracker",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "feeGlpTracker",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "glp",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "glpManager",
    outputs: [
      {
        internalType: "contract IGlpManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakedGlpTracker",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610a61380380610a618339818101604052608081101561003357600080fd5b50805160208201516040830151606090930151600080546001600160a01b039485166001600160a01b03199182161790915560018054938516938216939093179092556002805494841694831694909417909355600380549290931691161790556109be806100a36000396000f3fe608060405234801561001057600080fd5b50600436106100835760003560e01c8063095ea7b31461008857806323b872dd146100c857806355b6ed5c146100fe57806378a207ee1461013e578063a9059cbb14610162578063af394d001461018e578063dd62ed3e14610196578063e1c363b7146101c4578063fa6db1bc146101cc575b600080fd5b6100b46004803603604081101561009e57600080fd5b506001600160a01b0381351690602001356101d4565b604080519115158252519081900360200190f35b6100b4600480360360608110156100de57600080fd5b506001600160a01b038135811691602081013590911690604001356101ea565b61012c6004803603604081101561011457600080fd5b506001600160a01b0381358116916020013516610258565b60408051918252519081900360200190f35b610146610275565b604080516001600160a01b039092168252519081900360200190f35b6100b46004803603604081101561017857600080fd5b506001600160a01b038135169060200135610284565b610146610291565b61012c600480360360408110156101ac57600080fd5b506001600160a01b03813581169160200135166102a0565b6101466102cb565b6101466102da565b60006101e13384846102e9565b50600192915050565b600080610235836040518060600160405280602c8152602001610932602c91396001600160a01b038816600090815260046020908152604080832033845290915290205491906103d5565b90506102428533836102e9565b61024d85858561046c565b506001949350505050565b600460209081526000928352604080842090915290825290205481565b6000546001600160a01b031681565b60006101e133848461046c565b6002546001600160a01b031681565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205490565b6003546001600160a01b031681565b6001546001600160a01b031681565b6001600160a01b03831661032e5760405162461bcd60e51b81526004018080602001828103825260288152602001806108bd6028913960400191505060405180910390fd5b6001600160a01b0382166103735760405162461bcd60e51b81526004018080602001828103825260268152602001806108e56026913960400191505060405180910390fd5b6001600160a01b03808416600081815260046020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b600081848411156104645760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610429578181015183820152602001610411565b50505050905090810190601f1680156104565780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6001600160a01b0383166104b15760405162461bcd60e51b81526004018080602001828103825260298152602001806108946029913960400191505060405180910390fd5b6001600160a01b0382166104f65760405162461bcd60e51b815260040180806020018281038252602781526020018061090b6027913960400191505060405180910390fd5b426105f7600160009054906101000a90046001600160a01b03166001600160a01b031663352693156040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561054a57600080fd5b505af115801561055e573d6000803e3d6000fd5b505050506040513d602081101561057457600080fd5b505160015460408051638b770e1160e01b81526001600160a01b03898116600483015291519190921691638b770e119160248083019260209291908290030181600087803b1580156105c557600080fd5b505af11580156105d9573d6000803e3d6000fd5b505050506040513d60208110156105ef57600080fd5b505190610834565b11156106345760405162461bcd60e51b815260040180806020018281038252602b81526020018061095e602b913960400191505060405180910390fd5b6002546003546040805163098bf59d60e01b81526001600160a01b038781166004830181905293811660248301526044820186905260648201939093529051919092169163098bf59d91608480830192600092919082900301818387803b15801561069e57600080fd5b505af11580156106b2573d6000803e3d6000fd5b5050600354600080546040805163098bf59d60e01b81526001600160a01b038a8116600483018190529381166024830152604482018990526064820193909352905191909316945063098bf59d935060848084019382900301818387803b15801561071c57600080fd5b505af1158015610730573d6000803e3d6000fd5b50506003546000805460408051631e42d69b60e21b81526001600160a01b038a811660048301528981166024830152928316604482015260648101889052905191909316945063790b5a6c935060848084019382900301818387803b15801561079857600080fd5b505af11580156107ac573d6000803e3d6000fd5b505060025460035460408051631e42d69b60e21b81526001600160a01b03888116600483018190526024830152928316604482015260648101879052905191909216935063790b5a6c9250608480830192600092919082900301818387803b15801561081757600080fd5b505af115801561082b573d6000803e3d6000fd5b50505050505050565b60008282018381101561088c576040805162461bcd60e51b815260206004820152601b60248201527a536166654d6174683a206164646974696f6e206f766572666c6f7760281b604482015290519081900360640190fd5b939250505056fe5374616b6564476c703a207472616e736665722066726f6d20746865207a65726f20616464726573735374616b6564476c703a20617070726f76652066726f6d20746865207a65726f20616464726573735374616b6564476c703a20617070726f766520746f20746865207a65726f20616464726573735374616b6564476c703a207472616e7366657220746f20746865207a65726f20616464726573735374616b6564476c703a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e63655374616b6564476c703a20636f6f6c646f776e206475726174696f6e206e6f742079657420706173736564a26469706673582212207252e72ecd672144493b2aa6f50006d105d631f31e01a3b47c9b6134b0a44d0a64736f6c634300060c0033";

export class StakedGlp__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _glp: string,
    _glpManager: string,
    _stakedGlpTracker: string,
    _feeGlpTracker: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<StakedGlp> {
    return super.deploy(
      _glp,
      _glpManager,
      _stakedGlpTracker,
      _feeGlpTracker,
      overrides || {}
    ) as Promise<StakedGlp>;
  }
  getDeployTransaction(
    _glp: string,
    _glpManager: string,
    _stakedGlpTracker: string,
    _feeGlpTracker: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _glp,
      _glpManager,
      _stakedGlpTracker,
      _feeGlpTracker,
      overrides || {}
    );
  }
  attach(address: string): StakedGlp {
    return super.attach(address) as StakedGlp;
  }
  connect(signer: Signer): StakedGlp__factory {
    return super.connect(signer) as StakedGlp__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakedGlpInterface {
    return new utils.Interface(_abi) as StakedGlpInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StakedGlp {
    return new Contract(address, _abi, signerOrProvider) as StakedGlp;
  }
}
